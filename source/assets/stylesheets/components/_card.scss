// ==========================================================================
// card box styles
// ==========================================================================

@import '../config/scale';
@import '../config/color';

// Base
// --------------------------------------------------------------------------

[data-ui-card] {
  display: block;
}


// Elements
// --------------------------------------------------------------------------

[data-ui-card-figure] {
  @include type-size-default;
  display: block;
}

[data-ui-card-content] {
  @include type-size-default;
  display: block;
}

// Traits
// --------------------------------------------------------------------------

[data-ui-card~='multicolumn'] {
  $breakpoint: 880px; // use px here because rem causes jank due to root type scaling
  $figure-w: 76%;

  --breakpoint: #{$breakpoint};
  --figure-width: #{$figure-w};
  font-size: 0;

  [data-ui-card-figure] {
    @include type-size-default;
    display: inline-block;
    max-width: 100%;
    min-width: $figure-w;
    min-width: var(--figure-width);
    vertical-align: top;
    width: 100%; // fallback value if calc() isn't supported
    width: calc((#{$breakpoint} - 100%) * 1000);
    width: calc((var(--breakpoint) - 100%) * 1000);
  }

  [data-ui-card-content] {
    @include type-size-default;
    display: inline-block;
    max-width: 100%;
    min-width: (100% - $figure-w);
    min-width: calc(100% - var(--figure-width));
    vertical-align: top;
    width: 100%; // fallback value if calc() isn't supported
    width: calc((#{$breakpoint} - 100%) * 1000);
    width: calc((var(--breakpoint) - 100%) * 1000);
  }

  [data-ui-card-figure~='small'] {
    $breakpoint: 30rem;
    $figure-w: 33.49%;

    --figure-width: $figure-w;
    min-width: $figure-w;
    min-width: var(--figure-width);
    width: 100%; // fallback value if calc() isn't supported
    width: calc((#{$breakpoint} - 100%) * 1000);
    width: calc((var(--breakpoint) - 100%) * 1000);

    + [data-ui-card-content] {
      min-width: (100% - $figure-w);
      width: 100%; // fallback value if calc() isn't supported
      width: calc((#{$breakpoint} - 100%) * 1000);
      width: calc((var(--breakpoint) - 100%) * 1000);
    }
  }
}
