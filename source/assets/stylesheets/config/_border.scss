// =============================================================================
// Border config
// =============================================================================

@import "libs";
@import "color";

// Rounded corners
// -----------------------------------------------------------------------------

$border-radius: 3px !default;

@mixin border-radius {
  border-radius: $border-radius;
}

// Border width & style
// -----------------------------------------------------------------------------

$border-w-default: 'thin' !default;

$border-styles: (
  'default': 'solid',
  'secondary': 'dotted'
) !default;

// getter function for border style
@function border-style($name) {
  @return map-get($border-styles, unquote($name));
}

$border-widths: (
  'thin': 1px,
  'thick': 4px,
) !default;

// getter function for border widths
@function border-w($w: $border-w-default) {
  @if type-of($w) == 'number' {
    @return #{$w};
  } @else {
    @return map-get($border-widths, $w);
  }
}

// properties for border seam effect
$border-seam: (
  'marker-h': 5,
  'marker-w': 10,
  'offset': 3
);

@function border-seam($attr) {
  @return map-get($border-seam, $attr);
}

// make a standard border/hairline that works with the parent color theme
@mixin border($sides: all, $w: $border-w-default, $color: 'border', $style: 'default', $important: false) {
  @if $sides == all {
    border: #{border-w($w)} #{border-style($style)} #{color($color)}#{if($important == true, ' !important', '')};
  } @else {
    @each $side in $sides {
      border-#{$side}: #{border-w($w)} #{border-style($style)} #{color($color)}#{if($important == true, ' !important', '')};
    }
  }

  // if no color is specified, set up border-color for each theme
  @if type-of($color) != 'color' {
    @include color(border-color, $color);
  }
}
