// =============================================================================
// Global spacing
// -> used to keep whitespace in the layout consistent
// =============================================================================

@import "../config/spacing";

// Margin & padding utils
// -----------------------------------------------------------------------------

@each $prop in (padding, margin) {
  .#{$prop} {
    @include rem($prop, space());
  }
  .no-#{$prop} {
    @include rem($prop, 0 !important);
  }

  .#{$prop}-x {
    @include rem(#{$prop}-left, space());
    @include rem(#{$prop}-right, space());
  }

  .#{$prop}-y {
    @include rem(#{$prop}-top, space());
    @include rem(#{$prop}-bottom, space());
  }

  @each $name, $length in $spacing {
    @if $name != 'default' {
      .#{$prop}-#{$name} {
        @include rem($prop, space($name) !important);
      }

      .#{$prop}-x-#{$name} {
        @include rem(#{$prop}-left, space($name) !important);
        @include rem(#{$prop}-right, space($name) !important);
      }

      .#{$prop}-y-#{$name} {
        @include rem(#{$prop}-top, space($name) !important);
        @include rem(#{$prop}-bottom, space($name) !important);
      }
    }
  }

  @each $side in [left, right, top, bottom] {
    .#{$prop}-#{$side} {
      @include rem(#{$prop}-#{$side}, space() !important);
    }
    .no-#{$prop}-#{$side} {
      @include rem(#{$prop}-#{$side}, 0 !important);
    }

    @each $name, $length in $spacing {
      @if $name != 'default' {
        .#{$prop}-#{$side}-#{$name} {
          @include rem(#{$prop}-#{$side}, space($name) !important);
        }
      }
    }
  }
}

// Outside gutters
// -> opinionated class to set consistent, responsive outside padding on full-width containers
.padding-x-outside {
  @include rem(padding-left, space(space-outside()));
  @include rem(padding-right, space(space-outside()));

  @each $screen, $width in $spacing-outside {
    @if $screen != 'default' {
      @include media('>#{$screen}') {
        @include rem(padding-left, space($width));
        @include rem(padding-right, space($width));
      }
    }
  }
}

// Split gutters
// -----------------------------------------------------------------------------

// add uniform gutters to a group of elements
.gutter-wrapper {
  @include rem(padding, space($split: true));
  @include rem(margin, -(space()));

  .gutter {
    @include rem(padding, space($split: true));
  }
}

@each $name, $size in $spacing {
  @if $name != 'default' {
    .gutter-wrapper.gutter-#{$name} {
      @include rem(padding, space($name, $split: true));
      @include rem(margin, -(space($name)));

      .gutter {
        @include rem(padding, space($name, $split: true));
      }
    }
  }
}
